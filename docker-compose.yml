services:
  acer-pal:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
      network: host
    container_name: acer-pal-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=0
    env_file:
      - .env
    volumes:
      # Mount downloads directory for in-progress downloads
      - /DATA/AppData/acer-pal/downloads:/app/downloads
      # Mount completed directory for finished downloads (Sonarr blackhole)
      - /DATA/AppData/acer-pal/completed:/app/completed
      # Mount logs directory (optional)
      - /DATA/AppData/acer-pal/logs:/app/logs
      # Mount app data file for persistence
      - /DATA/AppData/acer-pal/app_data:/app/app_data
    networks:
      - acer-pal-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:3000/login')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: acer-pal-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - acer-pal
    networks:
      - acer-pal-network
    profiles:
      - with-nginx

networks:
  acer-pal-network:
    driver: bridge

volumes:
  downloads:
    driver: local
  completed:
    driver: local
  logs:
    driver: local